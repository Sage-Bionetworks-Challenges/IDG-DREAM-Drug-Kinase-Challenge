combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
pca <- prcomp(t(combat_edata))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
qValuesSv = p.adjust(pValuesSv,method="BH")
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type, fill=contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type, fill=contact_name), shape = 24) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type, fill=contact_name), shape = 25) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type, fill=series_id), shape = 25) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
devtools::install_github("AckerDWM/gg3D")
library(gg3d)
library(gg3D)
axes_3D()
ggplot(data = pca_df) +
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100), zlim = c(-100,100))+
axes_3D()
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100), zlim = c(-100,100))+
axes_3D()
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))+
axes_3D()
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type, fill=series_id), shape = 25) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))+
axes_3D() +
stat_3D()
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
axes_3D() +
stat_3D()
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
axes_3D() +
stat_3D()
Vignette("gg3D")
vignette("gg3D")
?gg3D
??gg3D
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
theme_void() +
axes_3D() +
stat_3D()
library(gg3D)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, x=PC1,y=PC2, color = cell_type, fill=series_id), shape = 25) +
ggplot(data = pca_df, aes(x=PC1,y=PC2, color = cell_type, fill=series_id), shape = 25) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3 color = cell_type, fill=series_id), shape = 25) +
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3 color = cell_type, fill=series_id), shape = 25) +
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, color = cell_type, fill=series_id), shape = 25) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, color = cell_type, fill=series_id), shape = 25) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, color = cell_type, fill=series_id), shape = 25) +
theme_void() +
axes_3D() +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D(labs=c("PC1", "PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +) +
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D(labs=c("PC1", "PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(    labs=c("Petal width", "Sepal width", "Petal length"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +) +
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c("Petal width", "Sepal width", "Petal length"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c("PC1", "PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1, (",pca$rotation,")"),
"PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
pca$rotation
summary(prcomp)
summary(pca)
summary(pca) %>% as.data.frame()
foo <- summary(pca)
foo$importance
pca.sum <- summary(pca)$importance
View(pca.sum)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1, (",pca.sum[2,1],")"),
"PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1, (",pca.sum[2,1]*100,"%)"),
"PC2", "PC3"),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
c(paste0("PC3 (",pca.sum[2,3]*100,"%)"),
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
library(tidyverse)
library(ggplot2)
library(gg3D)
library(reticulate)
library(sva)
use_condaenv("my-rdkit-env")
synapseclient <- import("synapseclient")
syn <- synapseclient$Synapse()
syn$login()
library(umap)
set.seed('90210')
metadata <- read_tsv(syn$get("syn18354790")$path)
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
column_to_rownames("X1")
# pheatmap::pheatmap(human.arrays[])
dims <- umap(t(human.arrays[,2:163]),
method = "umap-learn",
epochs = 500,
n_neighbors = 15,
metric = "euclidean",
random.state = 90210)
dims2 <- dims$layout %>%
as.data.frame() %>%
set_names("x", "y") %>%
rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = dims2) +
geom_point(aes(x=x,y=y, color = contact_name))
pca <- prcomp(t(human.arrays[,2:163]))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id))
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
select(X1,na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)])) %>%
column_to_rownames("X1")
pca <- prcomp(t(human.arrays[,2:103]))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name))+
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type))+
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
metadata <- read_tsv(syn$get("syn18354790")$path)
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
column_to_rownames("X1")
dims <- umap(t(human.arrays[,2:163]),
method = "umap-learn",
epochs = 500,
n_neighbors = 15,
metric = "euclidean",
random.state = 90210)
dims2 <- dims$layout %>%
as.data.frame() %>%
set_names("x", "y") %>%
rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = dims2) +
geom_point(aes(x=x,y=y, color = contact_name))
ggplot(data = dims2) +
geom_point(aes(x=x,y=y, color = contact_name))
pca <- prcomp(t(human.arrays[,2:163]))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id))
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
select(X1,na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)])) %>%
column_to_rownames("X1")
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
select(X1,na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)])) %>%
column_to_rownames("X1")
pca <- prcomp(t(human.arrays[,2:103]))
human.arrays <- read_tsv(syn$get("syn18354786")$path) %>%
select(X1,na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)])) %>%
column_to_rownames("X1")
pca <- prcomp(t(human.arrays[,2:91]))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type))+
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
pheno <- dplyr::filter(metadata, metadata$refinebio_accession_code %in% na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)]))
modcombat <- model.matrix(~as.factor(cell_type), data=pheno)
batch <- pheno$series_id %>% as.factor()
combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
pca <- prcomp(t(combat_edata))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
pheno <- dplyr::filter(metadata, metadata$refinebio_accession_code %in% na.omit(metadata$refinebio_accession_code[is.na(metadata$robert_filter)]))
modcombat <- model.matrix(~as.factor(cell_type), data=pheno)
batch <- pheno$series_id %>% as.factor()
combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
pca <- prcomp(t(combat_edata))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = contact_name)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
pca.sum <- summary(pca)$importance
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
modcombat <- model.matrix(~1, data=pheno)
batch <- pheno$series_id %>% as.factor()
combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
pca <- prcomp(t(combat_edata))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
pca.sum <- summary(pca)$importance
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, color = platform_id)) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
modcombat <- model.matrix(~cell_type, data=pheno)
batch <- pheno$series_id %>% as.factor()
combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
combat_edata <- ComBat(dat=as.matrix(human.arrays), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=T)
pca <- prcomp(t(combat_edata))
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
pca.sum <- summary(pca)$importance
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
?pca
prcomp
?prcomp
pca <- prcomp(t(human.arrays[,2:163]), center = T, .scale = T)
pca <- prcomp(t(human.arrays[,2:91]) center = T, .scale = T)
,
pca <- prcomp(t(human.arrays[,2:91]), center = T, .scale = T)
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = cell_type))+
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
ggplot(data = pca_df) +
geom_point(aes(x=PC1,y=PC2, color = platform_id)) +
coord_fixed(xlim=c(-200, 100),ylim = c(-100,100))
pca <- prcomp(t(combat_edata), , center = T, .scale = T)
pca <- prcomp(t(combat_edata), center = T, .scale = T)
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
pca.sum <- summary(pca)$importance
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
pca <- prcomp(t(combat_edata), center = T)
pca_df <- pca$x %>% as.data.frame() %>% rownames_to_column("refinebio_accession_code") %>%
left_join(metadata)
pca.sum <- summary(pca)$importance
ggplot(data = pca_df, aes(x=PC1,y=PC2,z=PC3, fill = cell_type, color=series_id)) +
theme_void() +
axes_3D() +
labs_3D(labs=c(paste0("PC1 (",pca.sum[2,1]*100,"%)"),
paste0("PC2 (",pca.sum[2,2]*100,"%)"),
paste0("PC3 (",pca.sum[2,3]*100,"%)")),
hjust=c(0,1,1), vjust=c(1, 1, -0.2), angle=c(0, 0, 90)) +
stat_3D(shape = 25)
?mds
??mds
View(pca)
View(pheno)
unique(pheno$series_id)
unique(metadatao$series_id)
unique(metadata$series_id)
this.file <- "https://raw.githubusercontent.com/Sage-Bionetworks/polypharmacology-db/develop/Database/build_db_v3_igraph.R"
library(synapser)
library(igraph)
db <- readRDS(synGet("syn17091507")$path) %>%
filter(!is.na(hugo_gene)) %>%
select(internal_id, hugo_gene, mean_pchembl, n_quantitative, n_qualitative) %>%
group_by(internal_id, hugo_gene) %>%
mutate(total_n = sum(n_quantitative, n_qualitative, na.rm = T)) %>%
ungroup()
db.names <- readRDS(synGet("syn17091507")$path) %>%
filter(!is.na(hugo_gene)) %>%
select(internal_id, std_name) %>%
distinct()
library(tidyverse)
library(synapser)
synLogin()
library(igraph)
db <- readRDS(synGet("syn17091507")$path) %>%
filter(!is.na(hugo_gene)) %>%
select(internal_id, hugo_gene, mean_pchembl, n_quantitative, n_qualitative) %>%
group_by(internal_id, hugo_gene) %>%
mutate(total_n = sum(n_quantitative, n_qualitative, na.rm = T)) %>%
ungroup()
db.names <- readRDS(synGet("syn17091507")$path) %>%
filter(!is.na(hugo_gene)) %>%
select(internal_id, std_name) %>%
distinct()
db.igraph <- graph.data.frame(db)
saveRDS(db.igraph, "drug-target_explorer_igraph.rds")
saveRDS(db.names, "drug-target_explorer_igraph_name_map.rds")
synStore(File("drug-target_explorer_igraph.rds", parentId = "syn11802193"),
used = "syn11712148",
executed = this.file)
synStore(File("drug-target_explorer_igraph_name_map.rds", parentId = "syn11802193"),
used = "syn11712148",
executed = this.file)
names <- readRDS(synTableQuery("SELECT internal_id, std_name FROM syn17090819")$asDataFrame())
write.table(names, "Data/drug-target_explorer_v3_igraph_name_map.txt", sep = "\t", row.names = F)
write.table(names, "Data/drug-target_explorer_v3_igraph_name_map.txt", sep = "\t", row.names = F)
results <- synTableQuery(sprintf("select * from %s", "syn11831632"))
x <- nrow(results$asDataFrame())/10000
for(i in 1:ceiling(x)){
print(i)
results <- synTableQuery(sprintf("select * from %s limit 10000", "syn11831632"))
deleted <- synDelete(results$asRowSet())
}
results <- synGet("syn11831632")
tableToAppend <- Table(results, names)
table <- synStore(tableToAppend)
setwd("~/Downloads")
template <- read_csv("round_2_template.csv")
?rnorm
prediction <- rnorm(nrow(template))
prediction <- rnorm(nrow(template), sd=4)
prediction <- rnorm(nrow(template), sd=3)
prediction <- rnorm(nrow(template), sd=2)
prediction <- rnorm(nrow(template), sd=2)+5
prediction
prediction <- rnorm(nrow(template), sd=1)+5
prediction <- rnorm(nrow(template), sd=1)+5
prediction
prediction <- rnorm(nrow(template), sd=1)+7
prediction <- rnorm(nrow(template), sd=2)+7
prediction
predition[prediction<0] <- 0
prediction[prediction<0] <- 0
##add prediction row to template
template$`pKd_[M]_pred` <- prediction
View(template)
##example set of predictions
prediction <- rnorm(nrow(template), sd=1.5)+7
##make sure nothing is below 0 otherwise it will fail validation
prediction[prediction<0] <- 0
##add prediction row to template
template$`pKd_[M]_pred` <- prediction
View(template)
set.seed(98121)
##add prediction row to template
template$`pKd_[M]_pred` <- prediction
write.table("prediction.csv", template)
write_csv("prediction.csv", template)
write_csv(template, "prediction.csv")
R.version
?read_csv
?write_csv
template <- read_csv("../io/template.csv")
setwd("~/Documents/Projects/IDG-DREAM-Drug-Kinase-Challenge/docker_demo")
template <- read_csv("../io/template.csv")
template <- read_csv("../io/template.csv")
library(readr)
set.seed(98121)
template <- read_csv("../io/template.csv")
template <- read_csv("io/template.csv")
template <- read_csv("../io/template.csv")
##example set of predictions
prediction <- rnorm(nrow(template), sd=1.5)+7
##make sure nothing is below 0 otherwise it will fail validation
prediction[prediction<0] <- 0
##add prediction row to template
template$`pKd_[M]_pred` <- prediction
write_csv(template, "io/prediction.csv")
